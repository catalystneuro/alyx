# Generated by Django 3.0 on 2020-01-29 09:55

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('misc', '0007_auto_20200120_1223'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('subjects', '0005_auto_20191224_1035'),
        ('actions', '0008_alter_session_qc'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerfusionSolution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PerfusionTemperature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Perfusion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('narrative', models.TextField(blank=True)),
                ('start_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('liver_cleared', models.BooleanField(blank=True, default=False)),
                ('post_fixation_time', models.PositiveIntegerField(blank=True, default=0)),
                ('transport_time', models.PositiveIntegerField(blank=True, default=0)),
                ('time_to_imaging', models.PositiveIntegerField(blank=True, default=0)),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.Lab')),
                ('location', models.ForeignKey(blank=True, help_text='The physical location at which the action was performed', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.LabLocation')),
                ('pfa_solution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pfa_solution', to='actions.PerfusionSolution')),
                ('post_fixation_temperature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_fixation_temperature', to='actions.PerfusionTemperature')),
                ('procedures', models.ManyToManyField(blank=True, help_text='The procedure(s) performed', to='actions.ProcedureType')),
                ('subject', models.ForeignKey(help_text='The subject on which this action was performed', on_delete=django.db.models.deletion.CASCADE, related_name='actions_perfusions', to='subjects.Subject')),
                ('transport_solution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transport_solution', to='actions.PerfusionSolution')),
                ('transport_temperature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transport_temperature', to='actions.PerfusionTemperature')),
                ('users', models.ManyToManyField(blank=True, help_text='The user(s) involved in this action', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
