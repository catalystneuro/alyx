# Generated by Django 3.0.5 on 2020-06-09 01:07

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('actions', '0011_auto_20200317_1055'),
        ('subjects', '0006_auto_20200317_1055'),
        ('data', '0006_dataset_hash_version'),
        ('misc', '0007_auto_20200120_1223'),
    ]

    operations = [
        migrations.CreateModel(
            name='BuffaloSubject',
            fields=[
                ('subject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='subjects.Subject')),
                ('unique_id', models.CharField(blank=True, default='', help_text='Monkey Identifier', max_length=255)),
                ('code', models.CharField(blank=True, default='', help_text='Two letter code', max_length=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('subjects.subject',),
        ),
        migrations.CreateModel(
            name='ChannelRecording',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('riples', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe')], default='', max_length=180)),
                ('notes', models.CharField(blank=True, default='', max_length=255)),
                ('alive', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe')], default='', max_length=180)),
                ('number_of_cells', models.CharField(blank=True, choices=[('1', 'nothing'), ('2', 'maybe 1 cell'), ('3', '1 good cell'), ('4', '2+ good cells')], default='', max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Electrode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('narrative', models.TextField(blank=True)),
                ('start_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('millimeters', models.FloatField(blank=True, null=True)),
                ('turns_per_mm', models.FloatField(blank=True, default=8, null=True)),
                ('channel_number', models.CharField(blank=True, default='', max_length=255)),
                ('notes', models.CharField(blank=True, default='', max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.Lab')),
                ('location', models.ForeignKey(blank=True, help_text='The physical location at which the action was performed', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.LabLocation')),
                ('procedures', models.ManyToManyField(blank=True, help_text='The procedure(s) performed', to='actions.ProcedureType')),
                ('subject', models.ForeignKey(help_text='The subject on which the electrode is', null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.BuffaloSubject')),
                ('users', models.ManyToManyField(blank=True, help_text='The user(s) involved in this action', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('unit', models.CharField(blank=True, choices=[('ml', 'ML'), ('bucket', 'Bucket'), ('gr', 'gr')], max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('name', models.CharField(blank=True, help_text='Task name', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('training', models.BooleanField(default=False)),
                ('original_task', models.CharField(blank=True, help_text='Task version', max_length=255, null=True)),
                ('first_version', models.BooleanField(default=True)),
                ('version', models.CharField(blank=True, default='1', help_text='Task version', max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.TaskCategory')),
                ('dataset_type', models.ManyToManyField(blank=True, to='data.DatasetType')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.Location')),
                ('platform', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.Platform')),
                ('reward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.Reward')),
            ],
            options={
                'verbose_name': 'TaskType',
            },
        ),
        migrations.CreateModel(
            name='STLFile',
            fields=[
                ('dataset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Dataset')),
                ('stl_file', models.CharField(blank=True, help_text='Path to STL file', max_length=1000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('subject', models.ForeignKey(help_text='The subject on which the electrode is', null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.BuffaloSubject')),
            ],
            options={
                'abstract': False,
            },
            bases=('data.dataset',),
        ),
        migrations.CreateModel(
            name='StartingPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('narrative', models.TextField(blank=True)),
                ('start_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('x', models.FloatField(null=True)),
                ('y', models.FloatField(null=True)),
                ('z', models.FloatField(null=True)),
                ('x_norm', models.FloatField(null=True)),
                ('y_norm', models.FloatField(null=True)),
                ('z_norm', models.FloatField(null=True)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('notes', models.CharField(blank=True, default='', max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('electrode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='starting_point', to='buffalo.Electrode')),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.Lab')),
                ('location', models.ForeignKey(blank=True, help_text='The physical location at which the action was performed', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.LabLocation')),
                ('procedures', models.ManyToManyField(blank=True, help_text='The procedure(s) performed', to='actions.ProcedureType')),
                ('subject', models.ForeignKey(help_text='The subject on which this action was performed', on_delete=django.db.models.deletion.CASCADE, related_name='buffalo_startingpoints', to='subjects.Subject')),
                ('users', models.ManyToManyField(blank=True, help_text='The user(s) involved in this action', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessedRecording',
            fields=[
                ('dataset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Dataset')),
                ('source', models.CharField(blank=True, help_text='Path to source file', max_length=1000)),
                ('electrical_voltage_file', models.CharField(blank=True, help_text='Path to result file', max_length=1000)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('lfp_band_1', models.FloatField(blank=True, null=True)),
                ('lfp_band_2', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('channel_recording', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.ChannelRecording')),
            ],
            options={
                'abstract': False,
            },
            bases=('data.dataset',),
        ),
        migrations.CreateModel(
            name='FoodLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('amount', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('food', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='buffalo.FoodType')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='actions.Session')),
                ('subject', models.ForeignKey(help_text='The subject on which this action was performed', null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.BuffaloSubject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectrodeLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('narrative', models.TextField(blank=True)),
                ('start_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('turn', models.FloatField(blank=True, null=True)),
                ('impedance', models.FloatField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, default='', max_length=255)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('electrode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.Electrode')),
                ('lab', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.Lab')),
                ('location', models.ForeignKey(blank=True, help_text='The physical location at which the action was performed', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.LabLocation')),
                ('procedures', models.ManyToManyField(blank=True, help_text='The procedure(s) performed', to='actions.ProcedureType')),
                ('subject', models.ForeignKey(help_text='The subject on which this action was performed', on_delete=django.db.models.deletion.CASCADE, related_name='buffalo_electrodelogs', to='subjects.Subject')),
                ('users', models.ManyToManyField(blank=True, help_text='The user(s) involved in this action', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='channelrecording',
            name='electrode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.Electrode'),
        ),
        migrations.AddField(
            model_name='channelrecording',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='actions.Session'),
        ),
        migrations.CreateModel(
            name='BuffaloSession',
            fields=[
                ('session_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='actions.Session')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('dataset_type', models.ManyToManyField(blank=True, to='data.DatasetType')),
            ],
            options={
                'verbose_name': 'Session',
            },
            bases=('actions.session',),
        ),
        migrations.CreateModel(
            name='BuffaloElectrodeLogSubject',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('buffalo.buffalosubject',),
        ),
        migrations.CreateModel(
            name='BuffaloElectrodeSubject',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('buffalo.buffalosubject',),
        ),
        migrations.CreateModel(
            name='SessionTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Long name', max_length=255)),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Structured data, formatted in a user-defined way', null=True)),
                ('date_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('general_comments', models.TextField(blank=True)),
                ('task_sequence', models.PositiveSmallIntegerField(blank=True, help_text='Indicates the relative position of a task within the session it belongs to', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('dataset_type', models.ManyToManyField(blank=True, to='data.DatasetType')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='actions.Session')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buffalo.Task')),
            ],
            options={
                'verbose_name': 'Task',
                'unique_together': {('session', 'task_sequence')},
            },
        ),
    ]
